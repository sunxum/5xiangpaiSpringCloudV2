<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mingyueTech.dao.AreaMapper" >
  <resultMap id="BaseResultMap" type="com.mingyueTech.entity.Area" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="aid" property="aid" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="VARCHAR" />
    <result column="parentid" property="parentid" jdbcType="INTEGER" />
    <result column="shortname" property="shortname" jdbcType="VARCHAR" />
    <result column="area" property="area" jdbcType="VARCHAR" />
    <result column="ishot" property="ishot" jdbcType="INTEGER" />
    <result column="isuseful" property="isuseful" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, aid, name, level, parentid, shortname, area, ishot, isuseful
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from area
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from area
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mingyueTech.entity.Area" >
    insert into area (id, aid, name, 
      level, parentid, shortname, 
      area, ishot, isuseful
      )
    values (#{id,jdbcType=INTEGER}, #{aid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{level,jdbcType=VARCHAR}, #{parentid,jdbcType=INTEGER}, #{shortname,jdbcType=VARCHAR}, 
      #{area,jdbcType=VARCHAR}, #{ishot,jdbcType=INTEGER}, #{isuseful,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mingyueTech.entity.Area" >
    insert into area
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="aid != null" >
        aid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="parentid != null" >
        parentid,
      </if>
      <if test="shortname != null" >
        shortname,
      </if>
      <if test="area != null" >
        area,
      </if>
      <if test="ishot != null" >
        ishot,
      </if>
      <if test="isuseful != null" >
        isuseful,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="aid != null" >
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="shortname != null" >
        #{shortname,jdbcType=VARCHAR},
      </if>
      <if test="area != null" >
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="ishot != null" >
        #{ishot,jdbcType=INTEGER},
      </if>
      <if test="isuseful != null" >
        #{isuseful,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mingyueTech.entity.Area" >
    update area
    <set >
      <if test="aid != null" >
        aid = #{aid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        parentid = #{parentid,jdbcType=INTEGER},
      </if>
      <if test="shortname != null" >
        shortname = #{shortname,jdbcType=VARCHAR},
      </if>
      <if test="area != null" >
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="ishot != null" >
        ishot = #{ishot,jdbcType=INTEGER},
      </if>
      <if test="isuseful != null" >
        isuseful = #{isuseful,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mingyueTech.entity.Area" >
    update area
    set aid = #{aid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      parentid = #{parentid,jdbcType=INTEGER},
      shortname = #{shortname,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      ishot = #{ishot,jdbcType=INTEGER},
      isuseful = #{isuseful,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="getRondomOne" resultMap="BaseResultMap">
SELECT id,aid,`name`,`level`,parentid,shortname,area,ishot,isuseful FROM area AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM area) - (SELECT MIN(id) FROM area)) + (SELECT MIN(id) FROM area)) AS rid) AS t2 WHERE t1.id >= t2.rid and t1.`level`=3 LIMIT 1
  </select>
    <select id="getlevel1" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from area
    where level =1
  </select>
      <select id="getlevel2" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from area
    where parentid = #{parentid,jdbcType=INTEGER} and level =2
  </select>
      <select id="getlevel3" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from area
    where parentid = #{parentid,jdbcType=INTEGER} and level =3
  </select>
  <select id="getbyid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from area
    where aid = #{aid,jdbcType=INTEGER}
  </select>
    <select id="getfid" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select 
    parentid
    from area
    where aid = #{aid,jdbcType=INTEGER}
  </select>
      <select id="getAddrById" resultType="java.lang.String" parameterType="java.lang.Integer" >
select CONCAT(a1.`name`,a2.`name`,a3.name) from area a3,area a2,area a1 where a3.aid = #{aid,jdbcType=INTEGER} and a3.parentid=a2.aid 
and a2.parentid=a1.aid;
  </select>
    <select id="getAddrAidById" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select 
    aid
    from area
    where id = #{id,jdbcType=INTEGER}
  </select>
</mapper>