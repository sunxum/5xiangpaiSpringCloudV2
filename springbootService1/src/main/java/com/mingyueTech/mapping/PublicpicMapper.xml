<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mingyueTech.dao.PublicpicMapper" >
  <resultMap id="BaseResultMap" type="com.mingyueTech.entity.Publicpic" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="b_id" property="bId" jdbcType="INTEGER" />
    <result column="picone" property="picone" jdbcType="VARCHAR" />
    <result column="pictwo" property="pictwo" jdbcType="VARCHAR" />
    <result column="picthree" property="picthree" jdbcType="VARCHAR" />
    <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.mingyueTech.entity.Publicpic" extends="BaseResultMap" >
    <result column="context" property="context" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, b_id, picone, pictwo, picthree, ctime
  </sql>
  <sql id="Blob_Column_List" >
    context
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from publicpic
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from publicpic
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mingyueTech.entity.Publicpic" >
    insert into publicpic (id, b_id, picone, 
      pictwo, picthree, ctime, 
      context)
    values (#{id,jdbcType=INTEGER}, #{bId,jdbcType=INTEGER}, #{picone,jdbcType=VARCHAR}, 
      #{pictwo,jdbcType=VARCHAR}, #{picthree,jdbcType=VARCHAR}, #{ctime,jdbcType=TIMESTAMP}, 
      #{context,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mingyueTech.entity.Publicpic" >
    insert into publicpic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bId != null" >
        b_id,
      </if>
      <if test="picone != null" >
        picone,
      </if>
      <if test="pictwo != null" >
        pictwo,
      </if>
      <if test="picthree != null" >
        picthree,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
      <if test="context != null" >
        context,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bId != null" >
        #{bId,jdbcType=INTEGER},
      </if>
      <if test="picone != null" >
        #{picone,jdbcType=VARCHAR},
      </if>
      <if test="pictwo != null" >
        #{pictwo,jdbcType=VARCHAR},
      </if>
      <if test="picthree != null" >
        #{picthree,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="context != null" >
        #{context,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mingyueTech.entity.Publicpic" >
    update publicpic
    <set >
      <if test="bId != null" >
        b_id = #{bId,jdbcType=INTEGER},
      </if>
      <if test="picone != null" >
        picone = #{picone,jdbcType=VARCHAR},
      </if>
      <if test="pictwo != null" >
        pictwo = #{pictwo,jdbcType=VARCHAR},
      </if>
      <if test="picthree != null" >
        picthree = #{picthree,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="context != null" >
        context = #{context,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mingyueTech.entity.Publicpic" >
    update publicpic
    set b_id = #{bId,jdbcType=INTEGER},
      picone = #{picone,jdbcType=VARCHAR},
      pictwo = #{pictwo,jdbcType=VARCHAR},
      picthree = #{picthree,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      context = #{context,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mingyueTech.entity.Publicpic" >
    update publicpic
    set b_id = #{bId,jdbcType=INTEGER},
      picone = #{picone,jdbcType=VARCHAR},
      pictwo = #{pictwo,jdbcType=VARCHAR},
      picthree = #{picthree,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
      <select id="getall" resultType="com.mingyueTech.entity.PublicPicVo">
SELECT
p.id pid,
	bh.u_id userId,
	u.user_name userName,
	u.headimg userHeader,
	gl.goods_name goodsName,
	bh.dealmoney dealMoney,
	gl.goods_price goodsPrice,
	p.context context,
	p.picone picone,
	p.pictwo pictwo,
	p.picthree picthree
FROM
	publicpic p,
	buyhistory bh,
	goodslist gl,
	USERs u
WHERE
	p.b_id = bh.b_id
AND bh.u_id = u.user_id
AND bh.gl_id = gl.gl_id limit 0,4
</select>
      <select id="getpublicListAll" resultType="com.mingyueTech.entity.PublicPicVo">
SELECT
	p.id pid,
	bh.u_id userId,
	bh.ctime dealTime,
	u.user_name userName,
	u.headimg userHeader,
	g.goods_id goodsId,
	gl.goods_name goodsName,
	bh.dealmoney dealMoney,
	gl.goods_price goodsPrice,
	p.context context,
	p.picone picone,
	p.pictwo pictwo,
	p.picthree picthree,
	p.ctime ctime
FROM
	publicpic p,
	buyhistory bh,
	goodslist gl,
	USER u
WHERE
	p.b_id = bh.b_id
AND bh.u_id = u.user_id
</select>
      <select id="getpublicpicbypid" resultType="com.mingyueTech.entity.PublicPicVo" parameterType="java.lang.Integer">
SELECT
	bh.u_id userId,
	bh.ctime dealTime,
	u.user_name userName,
	u.headimg userHeader,
	g.goods_id goodsId,
	gl.goods_name goodsName,
	bh.dealmoney dealMoney,
	gl.goods_price goodsPrice,
	gl.goods_pic goodsPic,
	p.context context,
	p.picone picone,
	p.pictwo pictwo,
	p.picthree picthree,
	p.ctime ctime
FROM
	publicpic p,
	buyhistory bh,
	goodslist gl,
	USER u
WHERE
	p.b_id = bh.b_id
AND bh.u_id = u.user_id
AND p.id = #{id,jdbcType=INTEGER}
</select>

      <select id="getPublicPicFour" resultType="com.mingyueTech.entity.PublicPicVo">
SELECT
	p.id pid,
	bh.u_id userId,
	bh.ctime dealTime,
	u.user_name userName,
	u.headimg userHeader,
	gl.goods_name goodsName,
	bh.dealmoney dealMoney,
	gl.goods_price goodsPrice,
	p.context context,
	p.picone picone,
	p.pictwo pictwo,
	p.picthree picthree,
	p.ctime ctime
FROM
	publicpic p,
	buyhistory bh,
	goodslist gl,
	USER u
WHERE
	p.b_id = bh.b_id
AND bh.u_id = u.user_id limit 0,4
</select> 
      <select id="getPublicVoById" resultType="com.mingyueTech.entity.PublicPicVo" parameterType="java.lang.Integer">
SELECT
	p.id pid,
	bh.u_id userId,
	bh.ctime dealTime,
	u.user_name userName,
	u.headimg userHeader,
	g.goods_id goodsId,
	gl.goods_name goodsName,
	bh.dealmoney dealMoney,
	gl.goods_price goodsPrice,
	p.context context,
	p.picone picone,
	p.pictwo pictwo,
	p.picthree picthree,
	p.ctime ctime
FROM
	publicpic p,
	buyhistory bh,
	goodslist gl,
	USER u
WHERE
	p.b_id = bh.b_id
AND bh.u_id = u.user_id 
AND id = #{id,jdbcType=INTEGER}
</select>


</mapper>